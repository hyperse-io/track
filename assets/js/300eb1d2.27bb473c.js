"use strict";(self.webpackChunk_hyperse_track_docs=self.webpackChunk_hyperse_track_docs||[]).push([[986],{9007:(o,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var e=n(2540),r=n(3023);const a={},i="React Hook Form",c={id:"react-hook-form",title:"React Hook Form",description:"Here an example if you want to plug MuiColorInput to your form using React Hook Form.",source:"@site/docs/react-hook-form.md",sourceDirName:".",slug:"/react-hook-form",permalink:"/track/docs/react-hook-form",draft:!1,unlisted:!1,editUrl:"https://github.com/hyperse-io/track/docs/react-hook-form.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Playground",permalink:"/track/docs/playground"}},s={},l=[];function m(o){const t={a:"a",code:"code",h1:"h1",img:"img",p:"p",pre:"pre",...(0,r.R)(),...o.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:"react-hook-form",children:"React Hook Form"}),"\n",(0,e.jsxs)(t.p,{children:["Here an example if you want to plug ",(0,e.jsx)(t.code,{children:"MuiColorInput"})," to your form using ",(0,e.jsx)(t.a,{href:"https://react-hook-form.com/",children:"React Hook Form"}),"."]}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:"language-tsx",children:"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@mui/material/Button';\nimport { MuiColorInput, matchIsValidColor } from 'mui-color-input';\nimport { Controller, useForm } from 'react-hook-form';\n\nconst App = () => {\n  const { control, handleSubmit } = useForm({\n    defaultValues: {\n      color: '#ffffff',\n    },\n  });\n\n  const onSubmit = (data) => {\n    alert(JSON.stringify(data));\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        name=\"color\"\n        control={control}\n        rules={{ validate: matchIsValidColor }}\n        render={({ field, fieldState }) => (\n          <MuiColorInput\n            {...field}\n            format=\"hex\"\n            helperText={fieldState.invalid ? 'Color is invalid' : ''}\n            error={fieldState.invalid}\n          />\n        )}\n      />\n      <div>\n        <Button type=\"submit\" variant=\"contained\" sx={{ mt: 2 }}>\n          Submit\n        </Button>\n      </div>\n    </form>\n  );\n};\n"})}),"\n",(0,e.jsx)(t.p,{children:(0,e.jsx)(t.a,{href:"https://codesandbox.io/s/react-hook-form-with-mui-color-input-94iiv1?fontsize=14&hidenavigation=1&theme=dark",children:(0,e.jsx)(t.img,{src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit on CodeSandbox"})})})]})}function d(o={}){const{wrapper:t}={...(0,r.R)(),...o.components};return t?(0,e.jsx)(t,{...o,children:(0,e.jsx)(m,{...o})}):m(o)}},3023:(o,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var e=n(3696);const r={},a=e.createContext(r);function i(o){const t=e.useContext(a);return e.useMemo((function(){return"function"==typeof o?o(t):{...t,...o}}),[t,o])}function c(o){let t;return t=o.disableParentContext?"function"==typeof o.components?o.components(r):o.components||r:i(o.components),e.createElement(a.Provider,{value:t},o.children)}}}]);